{"version":3,"sources":["files/resume.pdf","files/zaid.jpeg","components/Header.js","components/Footer.js","components/ProjectCard.js","components/Projects.js","components/About.js","components/Button.js","components/Landing.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","Pdf","target","Footer","Array","ProjectCard","data","html_url","language","name","description","Projects","useState","setData","useEffect","a","axios","result","fetchData","classname","map","item","key","id","About","Button","props","primary","Landing","onclick","src","photo","Contact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0IAAAA,EAAOC,QAAU,IAA0B,oC,kBCA3CD,EAAOC,QAAU,IAA0B,mC,yVCyC5BC,EApCA,WACb,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,UACb,6BACE,uBAAGC,KAAK,kBAAkBD,UAAU,QAApC,cAIF,6BACE,wBAAIA,UAAU,iBACZ,6BACE,qCAEF,4BACE,6BACE,yCAGJ,6BACE,uCAEF,4BACE,4BAAQA,UAAU,kBAChB,uBAAGA,UAAU,cAAcC,KAAMC,IAAKC,OAAO,UAA7C,iBCjBDC,G,MARA,WACb,OACE,yBAAKJ,UAAU,8BACb,0BAAMA,UAAU,UAAhB,aAAoCK,MAAM,UAA1C,iB,iDCgBSC,G,MAnBK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,6BACE,uBAAGN,KAAMM,EAAKC,SAAUR,UAAU,iBAChC,yBAAKA,UAAU,QACb,4BAAKO,EAAKE,UAEV,4BAAKF,EAAKG,MAEV,2BACwB,OAArBH,EAAKI,YAAL,2BAEGJ,EAAKI,kBCoBNC,G,MA9BE,WAAO,IAAD,EACGC,mBAAS,IADZ,mBACdN,EADc,KACRO,EADQ,KAYrB,OAVAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACKC,IACnB,iDAFc,OACVC,EADU,OAIhBJ,EAAQI,EAAOX,MAJC,2CAAH,qDAMfY,KACC,IAGD,yBAAKnB,UAAU,aACb,yBAAKoB,UAAU,qBACb,wBAAIpB,UAAU,eAAd,YACA,wBAAIA,UAAU,gBAAd,iEAKF,yBAAKA,UAAU,qBACZO,EAAKc,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,CAAaf,KAAMe,EAAMC,IAAKD,EAAKE,YCK9BC,G,MA9BD,WACZ,OACE,yBAAKzB,UAAU,cACb,6BACE,wBAAIA,UAAU,eAAd,SACA,wBAAIA,UAAU,gBAAd,6DAIF,yBAAKA,UAAU,kBACb,oUAK0B,6BAL1B,yDAOE,4BACE,kDACA,4CACA,uCACA,wCACA,wCACA,8CCdG0B,G,YAVA,SAACC,GACd,OACE,6BACE,4BAAQ3B,UAAW2B,EAAMC,QAAU,UAAY,aAC7C,uBAAG3B,KAAK,+BAAR,oB,iBCmCO4B,EApCC,WACd,OACE,yBAAK7B,UAAU,aACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,iBAAd,yDACA,uBAAGA,UAAU,mBAAb,+CAEE,uBAAGC,KAAK,+BAAR,2BACA,6BAHF,6HAKE,6BACA,yBAAKD,UAAU,oBACb,wBAAIA,UAAU,WAAd,iDAIA,kBAAC,EAAD,CACE8B,QAAQ,sDACRF,SAAO,OAKf,yBAAK5B,UAAU,kBACb,yBAAKA,UAAU,QACb,6BACE,yBAAK+B,IAAKC,YCbTC,G,MAfC,WACd,OACE,yBAAKjC,UAAU,aACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,eAAd,WACA,uBAAGA,UAAU,gBAAb,gHAIA,kBAAC,EAAD,U,MCQOkC,MAbf,WACE,OACE,yBAAKlC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLcmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.50729ba6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.2f313da2.pdf\";","module.exports = __webpack_public_path__ + \"static/media/zaid.aae5fa70.jpeg\";","import React, { useRef } from \"react\";\nimport \"./Header.css\";\nimport \"./util.css\";\nimport Pdf from \"../files/resume.pdf\";\n\nconst Header = () => {\n  return (\n    <div className=\"container\">\n      <nav className=\"navbar\">\n        <div>\n          <a href=\"localhost:3000/\" className=\"logo\">\n            ZAIDMASRI\n          </a>\n        </div>\n        <div>\n          <ul className=\"navbar__links\">\n            <div>\n              <a>About</a>\n            </div>\n            <li>\n              <div>\n                <a>Projects</a>\n              </div>\n            </li>\n            <div>\n              <a>Contact</a>\n            </div>\n            <li>\n              <button className=\"resume__button\">\n                <a className=\"pdf__handle\" href={Pdf} target=\"_blank\">\n                  Resume\n                </a>\n              </button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./util.css\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  return (\n    <div className=\"container dark__background\">\n      <span className=\"footer\">Made with {Array(\"\\u2665\")} and React</span>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./ProjectCard.css\";\nimport \"./util.css\";\n\nconst ProjectCard = ({ data }) => {\n  return (\n    <div>\n      <a href={data.html_url} className=\"repo__wrapper\">\n        <div className=\"card\">\n          <h3>{data.language}</h3>\n\n          <h1>{data.name}</h1>\n\n          <p>\n            {data.description === null\n              ? `Description coming soon!`\n              : data.description}\n          </p>\n        </div>\n      </a>\n    </div>\n  );\n};\nexport default ProjectCard;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ProjectCard from \"./ProjectCard\";\nimport \"./Projects.css\";\nimport \"./util.css\";\n\nconst Projects = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        \"https://api.github.com/users/zaidmasri2/repos\"\n      );\n      setData(result.data);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div classname=\"markdown__wrapper\">\n        <h2 className=\"heading__md\">Projects</h2>\n        <h4 className=\"subtitle__md\">\n          All of my projects on GitHub. Click on one and check it out!\n        </h4>\n      </div>\n\n      <div className=\"projects__wrapper\">\n        {data.map((item) => (\n          <ProjectCard data={item} key={item.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport \"./util.css\";\nimport \"./About.css\";\n\nconst About = () => {\n  return (\n    <div className=\"container \">\n      <div>\n        <h2 className=\"heading__md\">About</h2>\n        <h5 className=\"subtitle__md\">\n          Find out who I am, where I'm from and what I'm all about\n        </h5>\n      </div>\n      <div className=\"about__wrapper\">\n        <p>\n          I am currently wrapping up my Bachelors of Science in Software\n          Engineering in North Manchester, IN. I enjoy solving problems, whether\n          that be fixing a car or finding a bug in my code. My goal is to be the\n          ultimate proffesional by building detail oriented, abstract, and\n          performant experiences. <br />\n          Here are some technologies that I currently work with:\n          <ul>\n            <li> JavaScript (ES6+)</li>\n            <li> Java 11 LTS</li>\n            <li> React </li>\n            <li> Node.js</li>\n            <li> Express</li>\n            <li> GraphQL</li>\n          </ul>\n        </p>\n      </div>\n    </div>\n  );\n};\nexport default About;\n","import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  return (\n    <div>\n      <button className={props.primary ? \"primary\" : \"secondary\"}>\n        <a href=\"mailto:zaidmasri2@gmail.com\">Get in Touch</a>\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./util.css\";\nimport \"./Landing.css\";\nimport Button from \"./Button\";\nimport photo from \"../files/zaid.jpeg\";\n\nconst Landing = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"landing__wrapper\">\n        <div className=\"text__wrapper\">\n          <h1 className=\"jumbo__header\">Hello world! My name is Zaid üëãüèº</h1>\n          <p className=\"subtext__header\">\n            A passionate software engineering student at\n            <a href=\"https://www.manchester.edu/\"> Manchester University.</a>\n            <br />I will be graduating December, 2020. I am looking for\n            opportunities to make professonal, performant, and helpful software.\n            <br />\n            <div className=\"contact__wrapper\">\n              <h4 className=\"contact\">\n                Feel free to contact me if I can be any help!\n              </h4>\n\n              <Button\n                onclick=\"window.location.href='mailto:zaidmasri2@gmail.com';\"\n                primary\n              />\n            </div>\n          </p>\n        </div>\n        <div className=\"image__wrapper\">\n          <div className=\"rect\">\n            <div>\n              <img src={photo}></img>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React from \"react\";\nimport \"./util.css\";\nimport \"./Contact.css\";\nimport Button from \"./Button\";\n\nconst Contact = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"contact__center\">\n        <h2 className=\"heading__md\">Contact</h2>\n        <p className=\"subtitle__md\">\n          Although I am looking for new opportunities specifically, my inbox is\n          open to anyone. Feel free to reach out\n        </p>\n        <Button />\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Projects from \"./components/Projects\";\nimport About from \"./components/About\";\nimport Landing from \"./components/Landing\";\nimport Contact from \"./components/Contact\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Landing />\n      <About />\n      <Projects />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}